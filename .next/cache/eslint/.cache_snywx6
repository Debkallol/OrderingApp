[{"D:\\now\\pages\\api\\foodapi\\index.js":"1","D:\\now\\pages\\api\\giftapi\\index.js":"2","D:\\now\\pages\\app.js":"3","D:\\now\\pages\\food.js":"4","D:\\now\\pages\\gift.js":"5","D:\\now\\pages\\index.js":"6","D:\\now\\pages\\newgift.js":"7"},{"size":2058,"mtime":1642346943685,"results":"8","hashOfConfig":"9"},{"size":2058,"mtime":1642345588080,"results":"10","hashOfConfig":"9"},{"size":137,"mtime":1642304554469,"results":"11","hashOfConfig":"9"},{"size":2029,"mtime":1642345074160,"results":"12","hashOfConfig":"9"},{"size":2029,"mtime":1642343904119,"results":"13","hashOfConfig":"9"},{"size":2297,"mtime":1640274544984,"results":"14","hashOfConfig":"9"},{"size":1149,"mtime":1640616436955,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1fqbemk",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\now\\pages\\api\\foodapi\\index.js",["34"],"import dbConnect from '../../../utils/dbConnect';\r\nimport Foodnote from '../../../models/Foodnote';\r\n\r\ndbConnect();\r\n\r\nexport default async (req, res) => {\r\n    const { method } = req;\r\n    switch (method) {\r\n        // case 'GET':\r\n        //     try {\r\n        //         const note = await Note.find({});\r\n        //         res.status(200).json({ success: true, data: note })\r\n        //     } catch (error) {\r\n        //         res.status(400).json({ success: false });\r\n        //     }\r\n        //     break;\r\n        case 'POST': \r\n            try {\r\n                //body: JSON.parse(req.body)\r\n               // const notes = await JSON.parse(req.body);\r\n                const notessave = await Foodnote.create(req.body);\r\n                // const newdata = {\r\n                //     id: Date.now(),\r\n                //     text: occasion,\r\n                //     text: budget,\r\n                //     text: deliverytime,\r\n                //     text: deliverylocation,\r\n                //     text: customerNameAndNumber,\r\n                //     text: message\r\n                // }\r\n                // notessave.push(newdata)\r\n                res.status(201).json({ success: true, data: notessave })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                console.log(error)\r\n            }\r\n            break;\r\n            default:\r\n            res.status(400).json({success: false});\r\n            break;\r\n\r\n\r\n            }\r\n}\r\n\r\n// export default function handler (req, res){\r\n//     const body = req.body\r\n//     if (!body.name){\r\n//         return res.status(400).json({success: false});\r\n//     }\r\n    \r\n//     const notes =  Note.create(req.body);\r\n//     res.status(200).json({ success: true, CustomerData: notes })\r\n// }\r\n// occasion: req.body,\r\n//                     budget: req.body,\r\n//                     deliverytime: req.body,\r\n//                     deliverylocation: req.body,\r\n//                     customerNameAndNumber: req.body,\r\n//                     message: req.body\r\n","D:\\now\\pages\\api\\giftapi\\index.js",["35"],"import dbConnect from '../../../utils/dbConnect';\r\nimport Giftnote from '../../../models/Giftnote';\r\n\r\ndbConnect();\r\n\r\nexport default async (req, res) => {\r\n    const { method } = req;\r\n    switch (method) {\r\n        // case 'GET':\r\n        //     try {\r\n        //         const note = await Note.find({});\r\n        //         res.status(200).json({ success: true, data: note })\r\n        //     } catch (error) {\r\n        //         res.status(400).json({ success: false });\r\n        //     }\r\n        //     break;\r\n        case 'POST': \r\n            try {\r\n                //body: JSON.parse(req.body)\r\n               // const notes = await JSON.parse(req.body);\r\n                const notessave = await Giftnote.create(req.body);\r\n                // const newdata = {\r\n                //     id: Date.now(),\r\n                //     text: occasion,\r\n                //     text: budget,\r\n                //     text: deliverytime,\r\n                //     text: deliverylocation,\r\n                //     text: customerNameAndNumber,\r\n                //     text: message\r\n                // }\r\n                // notessave.push(newdata)\r\n                res.status(201).json({ success: true, data: notessave })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                console.log(error)\r\n            }\r\n            break;\r\n            default:\r\n            res.status(400).json({success: false});\r\n            break;\r\n\r\n\r\n            }\r\n}\r\n\r\n// export default function handler (req, res){\r\n//     const body = req.body\r\n//     if (!body.name){\r\n//         return res.status(400).json({success: false});\r\n//     }\r\n    \r\n//     const notes =  Note.create(req.body);\r\n//     res.status(200).json({ success: true, CustomerData: notes })\r\n// }\r\n// occasion: req.body,\r\n//                     budget: req.body,\r\n//                     deliverytime: req.body,\r\n//                     deliverylocation: req.body,\r\n//                     customerNameAndNumber: req.body,\r\n//                     message: req.body\r\n","D:\\now\\pages\\app.js",[],"D:\\now\\pages\\food.js",["36"],"import { responseSymbol } from 'next/dist/server/web/spec-compliant/fetch-event';\r\nimport Head from 'next/head'\r\nimport Footer from '../Component/Footer';\r\nimport Formfood from '../Component/Formfood';\r\nimport styles from '../styles/Home.module.css'\r\n\r\n//import dbConnect from '../../../utils/dbConnect';\r\n//import giftschema from '../../../models/Note';\r\n\r\n//dbConnect();\r\n// export async function getStaticProps () {\r\n//     // `getStaticProps` is executed on the server side.\r\n//     const article = await getArticleFromAPI()\r\n//     return {\r\n//       props: {\r\n//         fallback: {\r\n//           '/api/article': article\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n\r\n// function Article() {\r\n//     // `data` will always be available as it's in `fallback`.\r\n//     const { data } = useSWR('/api/article', fetcher)\r\n//     return <h1>{data.title}</h1>\r\n//   }\r\n\r\n\r\nexport default function gift () {\r\n  // async \r\n\r\n        // handleOnSubmit.getInitialProps = async() => {\r\n        //     const res = await fetch('https://localhost:3000/api/notes');\r\n        //     const data = res.json();\r\n        //     return { notes : data }\r\n        //  }\r\n      //  await fetch('/api/notes'  ,\r\n      //    {\r\n      //        body: JSON.stringify(formData),\r\n      //        headers: {'content-type' : 'application/json'},\r\n      //        method:'POST'\r\n      //    }\r\n      //   )\r\n       // const formData = await response.json()\r\n       // console.log(formData);\r\n   // }\r\n    return (\r\n    <div className={styles.container}>\r\n        <Head>\r\n        <title>Gift Basket</title>\r\n        <meta name=\"description\" content=\"Generated by create next app\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n            <main className={styles.main}>\r\n                <div>\r\n                    <Formfood />\r\n                </div>\r\n            </main>\r\n                \r\n            \r\n            \r\n            <a href='/' className={styles.back}> Back </a>\r\n\r\n        <Footer />\r\n    \r\n    </div>\r\n        \r\n    )\r\n}","D:\\now\\pages\\gift.js",["37"],"import { responseSymbol } from 'next/dist/server/web/spec-compliant/fetch-event';\r\nimport Head from 'next/head'\r\nimport Footer from '../Component/Footer';\r\nimport Formgift from '../Component/Formgift';\r\nimport styles from '../styles/Home.module.css'\r\n\r\n//import dbConnect from '../../../utils/dbConnect';\r\n//import giftschema from '../../../models/Note';\r\n\r\n//dbConnect();\r\n// export async function getStaticProps () {\r\n//     // `getStaticProps` is executed on the server side.\r\n//     const article = await getArticleFromAPI()\r\n//     return {\r\n//       props: {\r\n//         fallback: {\r\n//           '/api/article': article\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n\r\n// function Article() {\r\n//     // `data` will always be available as it's in `fallback`.\r\n//     const { data } = useSWR('/api/article', fetcher)\r\n//     return <h1>{data.title}</h1>\r\n//   }\r\n\r\n\r\nexport default function gift () {\r\n  // async \r\n\r\n        // handleOnSubmit.getInitialProps = async() => {\r\n        //     const res = await fetch('https://localhost:3000/api/notes');\r\n        //     const data = res.json();\r\n        //     return { notes : data }\r\n        //  }\r\n      //  await fetch('/api/notes'  ,\r\n      //    {\r\n      //        body: JSON.stringify(formData),\r\n      //        headers: {'content-type' : 'application/json'},\r\n      //        method:'POST'\r\n      //    }\r\n      //   )\r\n       // const formData = await response.json()\r\n       // console.log(formData);\r\n   // }\r\n    return (\r\n    <div className={styles.container}>\r\n        <Head>\r\n        <title>Gift Basket</title>\r\n        <meta name=\"description\" content=\"Generated by create next app\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n            <main className={styles.main}>\r\n                <div>\r\n                    <Formgift />\r\n                </div>\r\n            </main>\r\n                \r\n            \r\n            \r\n            <a href='/' className={styles.back}> Back </a>\r\n\r\n        <Footer />\r\n    \r\n    </div>\r\n        \r\n    )\r\n}","D:\\now\\pages\\index.js",[],"D:\\now\\pages\\newgift.js",[],{"ruleId":"38","severity":1,"message":"39","line":6,"column":1,"nodeType":"40","endLine":44,"endColumn":2},{"ruleId":"38","severity":1,"message":"39","line":6,"column":1,"nodeType":"40","endLine":44,"endColumn":2},{"ruleId":"41","severity":2,"message":"42","line":63,"column":13,"nodeType":"43","endLine":63,"endColumn":49},{"ruleId":"41","severity":2,"message":"42","line":63,"column":13,"nodeType":"43","endLine":63,"endColumn":49},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@next/next/no-html-link-for-pages","Do not use the HTML <a> tag to navigate to /. Use Link from 'next/link' instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages.","JSXOpeningElement"]